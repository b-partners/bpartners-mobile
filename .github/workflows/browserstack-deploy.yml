
name: deploy
on:
  push:
    branches:
      - '*'
  workflow_dispatch: 
    inputs: 
     platform: 
       type: choice
       description: 'Platform'
       options:
         - all
         - android-store
         - ios-store
       required: true
       
jobs:
  android-browserstack:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android-store'

    runs-on: ubuntu-latest

    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2

      - run: npm install --force

      - run: npm run build-android

      - name: Remove duplicated ressources
        run: |
          rm -rf /home/runner/work/bpartners-mobile/bpartners-mobile/android/app/src/main/res/drawable-*
          rm -rf /home/runner/work/bpartners-mobile/bpartners-mobile/android/app/src/main/res/raw

      - name: Decode keystore
        run: |
          cd android/app
          touch release.keystore
          echo "${{ secrets.KEYSTORE }}" | base64 -d >> release.keystore

      - name: Setting up the environment variables
        run: |
          mkdir ~/.gradle
          touch ~/.env
          sh ./setEnvironmentVariables.sh ${{ secrets.APP_UPLOAD_STORE_FILE }} ${{ secrets.APP_UPLOAD_STORE_PASSWORD }} ${{ secrets.APP_UPLOAD_KEY_ALIAS }} ${{ secrets.APP_UPLOAD_KEY_PASSWORD }} ${{secrets.API_URL}} ${{secrets.SUCCESS_URL}} ${{secrets.FAILURE_URL}}
          
      - name: Build release app
        run: cd android && ./gradlew assembleRelease

      - name: Build bundle app
        run: cd android && ./gradlew bundleRelease

      - run: echo "appName=$(echo -n ${{ github.event.head_commit.message }} | sha1sum | awk '{print $1}')" >> $GITHUB_ENV

      - run: |
         mv android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/apk/release/${{env.appName}}.apk
         mv android/app/build/outputs/bundle/release/app-release.aab android/app/build/outputs/bundle/release/${{env.appName}}.aab

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload apps to amazon S3
        run: |
          aws s3 cp android/app/build/outputs/apk/release/${{env.appName}}.apk s3://mobile-bpartners/android/
          aws s3 cp android/app/build/outputs/bundle/release/${{env.appName}}.aab s3://mobile-bpartners/android/

      - run: curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESSKEY }}" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@android/app/build/outputs/apk/release/${{ env.appName }}.apk"

    
  ios-browserstack:

    env:
      AWS_REGION: eu-west-3

    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios-store'

    runs-on: macos-latest

    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2

      - run: npm install --force

      - run:  npm install --location=global react-native-cli
      
      - run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            
      - run: npm run ci:build:e2e

      - run: echo "ipaName=$(echo -n ${{ github.event.head_commit.message }} | shasum | awk '{print $1}')" >> $GITHUB_ENV

      - name: change extension app to ipa
        run: |
          mkdir Payload
          mv ios/build/Build/Products/Release-iphonesimulator/BpartnersMobile.app Payload/
          zip -r ${{ env.ipaName }}.ipa Payload

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

      - run: aws s3 cp ${{ env.ipaName }}.ipa s3://mobile-bpartners/ios/

      - run: curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESSKEY }}" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@${{ env.ipaName }}.ipa"

      
