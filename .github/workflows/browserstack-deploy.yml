name: deploy
on:
  workflow_dispatch:
    inputs:
      OS:
        type: choice
        description: 'OS'
        options:
          - android
          - ios
        required: true
      env:
        type: choice
        description: 'env'
        options:
          - dev
          - preprod
          - prod
        required: true

jobs:

  android-browserstack:

    if: github.event.inputs.OS == 'android' && github.event.inputs.env == 'dev' || github.event.inputs.env == 'preprod' || github.event.inputs.env == 'prod'

    runs-on: ubuntu-latest

    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v2

      - run: npm install --force

      - name: Decode keystore
        run: |
            cd android/app
            touch release.keystore
            echo "${{ secrets.KEYSTORE }}" | base64 -d >> release.keystore
        if: github.event.inputs.env == 'preprod' || github.event.inputs.env == 'prod'
          
      - name: Setting up the environment variables
        run: |
            mkdir ~/.gradle
            sh ./setEnvironmentVariables.sh ${{ secrets.APP_UPLOAD_STORE_FILE }} ${{ secrets.APP_UPLOAD_STORE_PASSWORD }} ${{ secrets.APP_UPLOAD_KEY_ALIAS }} ${{ secrets.APP_UPLOAD_KEY_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
              
      - run: yarn build-android

      - name: Remove duplicated ressources
        run: |
            rm -rf /home/runner/work/bpartners-mobile/bpartners-mobile/android/app/src/main/res/drawable-*
            rm -rf /home/runner/work/bpartners-mobile/bpartners-mobile/android/app/src/main/res/raw

      - name: Build apk and bundle
        run: |
          echo "sha=${GITHUB_SHA}" >> $GITHUB_ENV

          if ${{ github.event.inputs.env == 'dev'}}; then
            sh ./setDevEnv.sh
            cd android
            ./gradlew assembleDebug && ./gradlew bundleDebug
            cd ..
            mv android/app/build/outputs/bundle/debug/app-debug.aab android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.aab
            mv android/app/build/outputs/apk/debug/app-debug.apk android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.apk

          elif ${{ github.event.inputs.env == 'preprod'}}; then
            sh ./setPreprodEnv.sh
            cd android
            ./gradlew assemblePreprod && ./gradlew bundlePreprod
            cd ..
            mv android/app/build/outputs/bundle/preprod/app-preprod.aab android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.aab
            mv android/app/build/outputs/apk/preprod/app-preprod.apk android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.apk

          elif ${{ github.event.inputs.env == 'prod'}}; then
            sh ./setProdEnv.sh
            cd android
            ./gradlew assembleRelease && ./gradlew bundleRelease
            cd ..
            mv android/app/build/outputs/bundle/release/app-release.aab android/app/build/outputs/${{ github.event.inputs.env}}-${{ env.sha }}.aab
            mv android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.apk

          fi

      - name: Deploy to browserstack
        run: |
          curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESSKEY }}" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.aab"
          curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESSKEY }}" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file1=@android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.apk"
      - name: Deploy bundle and apk to S3
        run: |
          aws s3 cp android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.apk s3://mobile-bpartners/android/
          aws s3 cp android/app/build/outputs/${{ github.event.inputs.env }}-${{ env.sha }}.aab s3://mobile-bpartners/android/
    
  ios-browserstack:

      if: github.event.inputs.platform == 'ios'
      runs-on: macos-latest

      timeout-minutes: 120

      steps:
        - uses: actions/checkout@v2

        - run: npm install --force

        - run: npm install --location=global react-native-cli

        - run: npm run build:ios:release:e2e

        - run: echo "ipaName=$(echo -n ${{ github.event.head_commit.message }} | sha1sum | awk '{print $1}')" >> $GITHUB_ENV

        - run: echo "ipaName=$(echo -n ${{ github.event.head_commit.message }} | sha1sum | awk '{print $1}')" >> $GITHUB_ENV

        - name: change extension app to ipa
          run: |
            mkdir Payload
            mv /Users/runner/work/bpartners-mobile/bpartners-mobile/ios/build/Build/Products/Release-iphonesimulator/bpartners.app Payload/
            zip -r ${{ env.ipaName }}.ipa Payload

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - run: aws s3 cp ${{ env.ipaName }}.ipa s3://mobile-bpartners/ios/

        - run: curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESSKEY }}" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@${{ env.ipaName }}.ipa"
