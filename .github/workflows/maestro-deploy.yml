name: Build and upload to Maestro Cloud (Native Android)

on:
  push:
    branches: [preprod, prod]
  pull_request:
    branches: [preprod, prod]

  workflow_dispatch:

env:
  NODE_OPTIONS: '--max_old_space_size=8192'

jobs:
  maestro-cloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Set environment variable based on branch
        run: |
          if [[ "${{ github.ref_name }}" == "prod" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          else
            echo "ENV=preprod" >> $GITHUB_ENV
          fi
      - run: npm install --force
      - name: Retrieve the environment variables from aws and put them in .env
        run: |
          echo API_URL=${{ secrets.TEST_API_URL }} > .env
          echo WEB_CLIENT_ID=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/WEB_CLIENT_ID" --with-decryption --output text --query "Parameters[*].Value") > .env
          echo USER_POOL_ID=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/USER_POOL_ID" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo OAUTH_DOMAIN=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/OAUTH_DOMAIN" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo SCHEME=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/SCHEME" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo SUCCESS_URL=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/SUCCESS_URL" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo FAILURE_URL=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/FAILURE_URL" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo SWAN_URL=$(aws ssm get-parameters --names "/bpartners/mobile/SWAN_URL" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo CLIENT_ID=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/SWAN_CLIENT_ID" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo CLIENT_SECRET=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/SWAN_CLIENT_SECRET" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo SENTRY_ENV=$(aws ssm get-parameters --names "/bpartners/mobile/$ENV/SENTRY_ENV" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo SENTRY_DSN=$(aws ssm get-parameters --names "/bpartners/mobile/SENTRY_DSN" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo AUTHORIZATION_ENDPOINT=$(aws ssm get-parameters --names "/bpartners/mobile/AUTHORIZATION_ENDPOINT" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo TOKEN_ENDPOINT=$(aws ssm get-parameters --names "/github.event.inputs.envbpartners/mobile/TOKEN_ENDPOINT" --with-decryption --output text --query "Parameters[*].Value") >> .env
          echo ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }} >> .env
          echo REGION=${{ secrets.REGION }} >> .env
          echo SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }} >> .env
      - run: cd android && ./gradlew assembleRelease && cd ..
      - uses: mobile-dev-inc/action-maestro-cloud@v1.9.2
        with:
          api-key: ${{ secrets.MAESTRO_CLOUD_API_KEY }}
          app-file: android/app/build/outputs/apk/release/app-release.apk
          env: |
            USER_EMAIL=${{ secrets.TEST_USER_EMAIL }}
            USER_PASSWORD=${{ secrets.TEST_USER_PASSWORD }}
